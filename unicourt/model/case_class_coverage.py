# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/developers/enterpriseapi/api/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictInt
from typing import Any, ClassVar, Dict, List, Optional
from typing_extensions import Annotated
from unicourt.model.case_class import CaseClass
from typing import Optional, Set
from typing_extensions import Self

class CaseClassCoverage(BaseModel):
    """
    CaseClassCoverage
    """ # noqa: E501
    object: Optional[Annotated[str, Field(min_length=17, strict=True, max_length=17)]] = Field(default='CaseClassCoverage', description="Name of the object")
    case_class: Optional[CaseClass] = Field(default=None, alias="caseClass")
    court_service_status_api: Optional[Annotated[str, Field(min_length=50, strict=True, max_length=250)]] = Field(default=None, description="API Link to the Court Service status with filters of court and case class", alias="courtServiceStatusAPI")
    case_count: Optional[StrictInt] = Field(default=None, description="Total Cases for a specific CourtLocation.", alias="caseCount")
    cases_in_last_thirty_days_count: Optional[StrictInt] = Field(default=None, description="Cases in last 30 days that were added to UniCourt for a specific CourtLocation", alias="casesInLastThirtyDaysCount")
    free_case_document_count: Optional[StrictInt] = Field(default=None, description="Free Case Documents for a specific CourtLocation.", alias="freeCaseDocumentCount")
    free_case_documents_in_last_thirty_days_count: Optional[StrictInt] = Field(default=None, description="Free Case Documents in last 30 days that were added to UniCourt for a specific CourtLocation.", alias="freeCaseDocumentsInLastThirtyDaysCount")
    paid_case_document_count: Optional[StrictInt] = Field(default=None, description="Paid Case Documents for a specific CourtLocation.", alias="paidCaseDocumentCount")
    paid_case_documents_in_last_thirty_days_count: Optional[StrictInt] = Field(default=None, description="Paid Case Documents in last 30 days that were added to UniCourt for a specific CourtLocation.", alias="paidCaseDocumentsInLastThirtyDaysCount")
    case_document_in_library_count: Optional[StrictInt] = Field(default=None, description="Case Documents that were added to UniCourt Crowd Source Library for a specific CourtLocationy.", alias="caseDocumentInLibraryCount")
    case_document_in_library_in_last_thirty_days_count: Optional[StrictInt] = Field(default=None, description="Case Documents that were added to UniCourt Crowd Source Library for a specific CourtLocation in last 30 days.", alias="caseDocumentInLibraryInLastThirtyDaysCount")
    __properties: ClassVar[List[str]] = ["object", "caseClass", "courtServiceStatusAPI", "caseCount", "casesInLastThirtyDaysCount", "freeCaseDocumentCount", "freeCaseDocumentsInLastThirtyDaysCount", "paidCaseDocumentCount", "paidCaseDocumentsInLastThirtyDaysCount", "caseDocumentInLibraryCount", "caseDocumentInLibraryInLastThirtyDaysCount"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of CaseClassCoverage from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of case_class
        if self.case_class:
            _dict['caseClass'] = self.case_class.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of CaseClassCoverage from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "object": obj.get("object") if obj.get("object") is not None else 'CaseClassCoverage',
            "caseClass": CaseClass.from_dict(obj["caseClass"]) if obj.get("caseClass") is not None else None,
            "courtServiceStatusAPI": obj.get("courtServiceStatusAPI"),
            "caseCount": obj.get("caseCount"),
            "casesInLastThirtyDaysCount": obj.get("casesInLastThirtyDaysCount"),
            "freeCaseDocumentCount": obj.get("freeCaseDocumentCount"),
            "freeCaseDocumentsInLastThirtyDaysCount": obj.get("freeCaseDocumentsInLastThirtyDaysCount"),
            "paidCaseDocumentCount": obj.get("paidCaseDocumentCount"),
            "paidCaseDocumentsInLastThirtyDaysCount": obj.get("paidCaseDocumentsInLastThirtyDaysCount"),
            "caseDocumentInLibraryCount": obj.get("caseDocumentInLibraryCount"),
            "caseDocumentInLibraryInLastThirtyDaysCount": obj.get("caseDocumentInLibraryInLastThirtyDaysCount")
        })
        return _obj


